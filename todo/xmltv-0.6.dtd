<!-- XMLTV DTD version 0.6

This is a DTD to represent TV listings.  First it lists the details of
some channels, and then the programmes on those channels.  However
programmes for the same channel need not be grouped together, so you
can for example sort the listing into time order.

Programmes are contained in 'timeslot' elements, which specify the
start time, channel and optionally stop time.  Typically there will be
one programme in each timeslot but sometimes it's necessary to have
several programmes sharing a timeslot, or for a timeslot to contain
'unknown' elements.

Some attributes in this DTD take a value which is date-and-time.  We
follow the format defined in XML Schema at
<http://www.w3.org/TR/xmlschema-2/#dateTime>, although date-and-time
values in XMLTV files are a subset of those allowed by XML Schema
(which itself allows a subset of ISO 8601).  (Note however that the
'year' element just has a four digit year, not a full date and time.)

Our dates use the format

    CCYY-MM-DDThh:mm:ssZ

in other words, a bigendian date.  The -, T, and : characters are
required punctuation.  The Z character signifies the timezone, which
is always UTC (except for the 'code-time' element).  It is up to
applications to convert to and from the local timezone if wanted - any
'tz-hint' elements in the file can be used for this.

This DTD tries to follow the general rule that metadata is stored as
attributes while content is stored as elements.  The time and channel
a programme happens to be shown are attributes of 'timeslot', other
scheduling information like whether it is a repeat are attributes of
'programme'.  But the content of the programme, which is the same
whenever it is shown, is stored in subelements of 'programme'.

Within programme data, textual element content is normally free text,
and all whitespace characters (including newline) are treated simply
as space, so unless stated otherwise the text is intended to be a
single line.  Every text element has an optional 'xml:lang' attribute
associated with it (as is customary, the language should be in RFC
1766 style, eg 'en' or 'en-US').  If xml:lang is not specified then
the language of the text is unknown.  However where an element has
xml:lang and contains other elements, the child elements which may
have xml:lang inherit the value from their parent, unless they
override it themselves.  Semantically there is no difference between
specifying xml:lang="en" separately for every bit of free text in the
document and putting it once in the top-level 'tv' element.

Things stored as attributes, rather than as textual content, are
typically machine-readable and must come from some limited range of
values (for example a year must be four digits).

Many elements inside 'programme' or 'channel' are repeatable, allowing
the same thing to be stated many times.  For example, a programme may
have more than one title or more than one category.  The convention is
that elements appearing earlier are somehow more important or more
canonical.  So you might put a programme's original title first and
its translated title second; in a cast list, the more important roles
are given first; and so on.

I have tried to use the DTD grammar to rule out meaningless
constructs.  But in some cases the grammar does allow things which
don't make any sense, for example an 'episode' element which states
neither an episode number nor an episode title.  Such syntactically
sound but semantically silly things should be skipped over with a
warning by applications.

Here is a contrived example document conforming to this DTD:

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE tv SYSTEM "xmltv-0.6.dtd">
<tv>
  <about>
    <copying>
      <p>
	Copyright 2004, some TV network
      </p>
    </copying>
    <generator-info>
      <link href="http://xmltv.org/" />
    </generator-info>
  </about>
  <channel id="C3sat.de">
    <display-name xml:lang="de">3SAT</display-name>
  </channel>
  <channel id="das-erste.de">
    <old-id id="C405.tv-listings.com" />
    <display-name xml:lang="de">ARD</display-name>
    <display-name xml:lang="de">Das Erste</display-name>
    <number num="1" />
  </channel>
  <tz-hint tz="+0100" />
  <tz-hint from="2000-03-26T01:00:00Z" tz="+0200" />
  <tz-hint from="2000-10-29T01:00:00Z" tz="+0100" />
  <timeslot start="2000-06-03T16:33:00Z" channel="C3sat.de">
    <programme xml:lang="en" id="P123"
               newness="repeat" repeat-channel="C3sat.de">
      <title>blah</title>
      <title>blah</title>
      <desc>
	<p>
          Blah Blah Blah.
        </p>
      </desc>
      <credits>
	<director>blah</director>
	<role>
	  <character>Mr Smith</character>
	  <actor>Simon Callow</actor>
        </role>
	<role>
	  <actor>Colin Baker</actor>
        </role>
      </credits>
      <year production="1995" release="1996" />
      <episode-details>
	<season nth="last" />
	<episode nth="2" of="12" in="season">
	  <title>The case of the bombastic blackcurrent</title>
	</episode>
      </episode-details>
      <video>
	<aspect x="16" y="9" />
      </video>
      <classification system="MPAA">
	<text>PG</text>
	<icon src="http://www.mpaa.org/images/movieratings/PG(small)-01.gif" />
      </classification>
      <star-rating stars="3" out-of="3" />
    </programme>
  </timeslot>
  <timeslot start="2000-06-03T23:00:00Z" channel="C3sat.de">
    <programme-ref programme="P123" />
  </timeslot>
</tv>

At present versions of this DTD correspond to releases of the 'xmltv'
package, which is a set of programs to generate and manipulate files
conforming to this DTD.  The DTD is maintained by Ed Avis
(ed@membled.com) but a large part of it is based on discussions on the
xmltv-devel mailing list and elsewhere.
-->

<!-- The root element, tv.  This contains an optional 'about' element
giving details of where the listings came from and their copyright
status; then it has channel definitions followed by timeslots.

The 'from' and 'until' elements state what time period is covered by
this file.  Times outside this period are implicitly 'not known'.  See
the later section on 'Unknown versus nothing'.

The 'xml:lang' attribute is a convenient place to set a default
language for textual content, which will apply to the whole of the
document except where overridden in individual elements.

TODO some way to specify version of the file format.
-->
<!ELEMENT tv (about?, (channel+, tz-hint*, timeslot*)?)>
<!ATTLIST tv from     CDATA #IMPLIED
             until    CDATA #IMPLIED
             xml:lang CDATA #IMPLIED>

<!-- Where these listings came from.

'date' should be when the listings were originally produced in whatever
format; if you're converting data from another source, then use the
date given by that source.  The date when the conversion itself was
done is not important.
-->
<!ELEMENT about (copying*, source-info*, source-data*, generator-info*)>
<!ATTLIST about date CDATA #IMPLIED>

<!-- Human-readable text describing the copying conditions for these
listings.  This is a list of paragraphs, see below. -->
<!ELEMENT copying (p+)>
<!ATTLIST copying xml:lang CDATA #IMPLIED>

<!-- The 'p' element, as in XHTML, indicates a paragraph.  It is used
for long textual content - all other text is meant to be a single
line.
-->
<!ELEMENT p (#PCDATA)>

<!-- Human-readable information about the source of the listings.  We
use the 'link' element for this, see below. -->
<!ELEMENT source-info (link)>

<!-- Information about the program which generated the listings. -->
<!ELEMENT generator-info (link)>

<!-- A URL for the upstream source data.  This should be a page
containing the listings data used, or at least one with links to the
data. -->
<!ELEMENT source-data EMPTY>
<!ATTLIST source-data href CDATA #REQUIRED>

<!-- link - a hyperlink

In HTML links have a URL ('href') and associated link text.  Our links
are a bit more general because listings sources don't always have link
text, or they may have both some short link text and some extra
description.  So the 'text' element gives short link text to be
underlined in a browser, and 'blurb' gives a longer description of what
you might find on the visited page.
-->
<!ELEMENT link (text?, blurb?)>
<!ATTLIST link href CDATA #REQUIRED>
<!ELEMENT text (#PCDATA)>
<!ATTLIST text xml:lang CDATA #IMPLIED>
<!ELEMENT blurb (p+)>
<!ATTLIST blurb xml:lang CDATA #IMPLIED>

<!-- channel - details of a channel

Each 'timeslot' element (see below) should have an attribute
'channel' giving the channel on which it is broadcast.  That attribute
gives the id of some channel element earlier in the file.  Thus the
information for a channel is given only once and then referred to
later.

Each channel has one id attribute, which must be unique.  RFC2838
suggests a scheme for uniquely naming TV channels by using DNS-like
names.  We try to follow that, for example CNN World gets the id
'world.cnn.com' based on the domain name 'cnn.com' of the broadcaster.
However, while DNS names may begin with a digit, ids in XML files may
not, so we prepend the letter 'C' where necessary.  For example
'C2.cinema.sky.com' rather than '2.cinema.sky.com'.

These ids are meant to stay the same, but sometimes they will change,
so the 'old-id' element can be used to list secondary ids for a
channel.  Then the old identifiers will continue to be usable.

The display name is a human-readable name of the channel.  To give a
channel number use the 'number' element, and similarly you can specify
the channel's call sign.

Sometimes TV listings give a little icon for each channel, these can
be stored with the 'icon' element which is like 'img' in HTML.

There may be hyperlinks to pages giving more information about the
channel - the 'link' element is described below.

Finally, 'affiliation' gives some information about whether this is an
affiliate station, for example it could give the name of the national
network affiliated to.  The content is human-readable text and the
exact meaning depends on the listings source.

The ordering of channel elements makes no difference to the meaning of
the file, since they are looked up by id and not by their position.
However it makes things like diffing easier if you write the channel
elements sorted by ASCII order of their ids.
-->
<!ELEMENT channel (old-id*, display-name+, number*, call-sign?,
                   icon*, link*, affiliation*)>
<!ATTLIST channel id ID #REQUIRED>
<!ELEMENT old-id EMPTY>
<!ATTLIST old-id id ID #REQUIRED>

<!-- A user-friendly name for the channel.  List the most canonical or
common ones first and the most obscure names last.  Note that channel
number and call sign may be display-names as well as having their own
elements described below; it depends on whether they're customarily
used to refer to the channel by humans.
-->
<!ELEMENT display-name (#PCDATA)>
<!ATTLIST display-name xml:lang CDATA #IMPLIED>

<!-- A channel number.  Details of tuning channels vary by country so
this is very much application-specific.  But it could correspond to
a commonly assigned button for that channel on TV sets (1, 2, 3), a
channel number for a satellite or cable system (101, 522), or to a
particular frequency for broadcast.

If system is not given then the number is the button most viewers
would press, or key into their remote, to view the channel.
Otherwise, the exact meaning of the channel number is
application-defined.
-->
<!ELEMENT number EMPTY>
<!ATTLIST number system CDATA #IMPLIED
                 num    CDATA #REQUIRED>

<!-- On-air call sign of the channel. -->
<!ELEMENT call-sign EMPTY>
<!ATTLIST call-sign cs CDATA #REQUIRED>

<!-- Icons are a bit like 'img' in HTML. -->
<!ELEMENT icon EMPTY>
<!ATTLIST icon src    CDATA #REQUIRED
               width  CDATA #IMPLIED
               height CDATA #IMPLIED>

<!-- Free text describing the channel's affiliation to a network. -->
<!ELEMENT affiliation (#PCDATA)>
<!ATTLIST affiliation xml:lang CDATA #IMPLIED>

<!-- tz-hint

Times in XMLTV files are always in UTC and do not specify a timezone.
But applications displaying times to the user may want to convert into
an appropriate timezone.  They could use the user's local timezone but
that is not always appropriate - for example if clocks change halfway
through a week then no single timezone could be used.

The tz-hint element suggests a timezone to be used; the 'from'
attribute if present gives the time (in UTC) when this timezone comes
into effect.  So it is possible to have several tz-hints covering
different times of the year.
-->
<!ELEMENT tz-hint EMPTY>
<!ATTLIST tz-hint tz   CDATA #REQUIRED
                  from CDATA "1900-01-01T00:00:00Z">

<!-- timeslot

This element deals with 'technical' details of broadcasting.  When,
what channel, is it live, and so on.  It doesn't cover the content of
what is broadcast.  If the same programme were repeated later then the
timeslot would be different, but the content would be the same.

The required attributes are 'channel', which is a reference to the
'id' of a channel element defined earlier, and 'start' which is a time
(actually date-and-time).  Start time and (if present) stop time must
be in bigendian form and in timezone UTC, as mentioned earlier.  It is
considered that a programme runs from its start time, up to but not
including any stop time.

The 'conditional' attribute is to handle uncertainty in what might be
broadcast.  If its value is 'blackout' then the transmission might not
be available in certain areas.  An example of 'if-necessary' is a
best-of-seven hockey playoff, games 5 to 7 happen only 'if necessary';
this can be used to give alternative possible schedules for the same
channel.  Timeslots for the same channel must not overlap, unless they
both have some 'conditional' attribute set.

The attribute 'uncertain' is similar but not quite the same.  It means
there is no particular reason why the timeslot might be different, but
the listings just haven't been finalized yet.  So an application might
want to re-download listings for this time period just to check they
haven't changed, for example.  If 'uncertain' is absent it counts as
false - so if it is present the only value is 'yes'.

'liveness' can be live, joined in progress (meaning partly live and
partly prerecorded), or prerecorded.

'encryption' is an application-defined value, but intended to be used
for particular timeslots which are encrypted individually, rather than
routine encryption of a whole channel.  If the attribute is not
present, that means the timeslot is not encrypted or at least not
encrypted any 'worse' than the rest of the channel.  However,
encryption="none" means that the programme is an unusual in-the-clear
broadcast on a normally encrypted channel.  In other words this
attribute is present only when the programme's encryption is
somehow _different_ from what normally happens for its channel.

The 'code-time' element is to support systems like PDC or VPS where a
timeslot is identified by a 'PDC time' which may not be the same as
the time when transmission begins.  This is so that programmes can be
recorded correctly even if their transmission time changes.  So
code-time has a start time and and optional stop time.  Depending on
the particular system, these times may not be in UTC, they may be in a
local timezone.  (Certainly this is the case for PDC times in many
countries.)  So it's possible for the code-time to be routinely
different from the physical start time.  If you suspect that the
code-time is not in UTC, omit the 'Z' from the date and time string.
This is the only place where you're allowed to do that.

The 'code-num' element is for systems like VCRPlus/VideoPlus/Showview
which identify a timeslot by a mysterious string or number.

The values of 'system' for the 'code-time' and 'code-num' elements is
application-defined but the convention is to normalize the name to
lower case, for example 'vps', 'vcrplus', 'showview'.

The 'grabber-more' element is for implementation-specific use.  The
intention is that a grabber can quickly fetch less detailed listings,
putting a URL or other string into the grabber-more element of some
timeslots.  Then when the user has selected certain timeslots as
interesting, the grabber can do a second pass filling in extra
information.

Then comes the real content of a timeslot - one or more programmes.
Typically there will be exactly one, but some listings sources tend to
run together programmes not specifying when one ends and the next
begins, for example 'News followed by Weather'.  That would become a
single timeslot containing two programmes.  The programmes within a
timeslot are in time order.

If a programme has appeared earlier in the file it is possible to
refer back to it with programme-ref rather than making a new programme
element.

It's also possible for a timeslot to contain 'unknown' elements as
well as or instead of programmes.  See 'Unknown versus nothing' below.
-->
<!ELEMENT timeslot (code-time*, code-num*, grabber-more*,
                    (programme | programme-ref | unknown)+)>
<!ATTLIST timeslot channel     IDREF                         #REQUIRED
                   start       CDATA                         #REQUIRED
                   stop        CDATA                         #IMPLIED
                   conditional (blackout | if-necessary)     #IMPLIED
                   uncertain   (yes)                         #IMPLIED
                   liveness    (live | joined | prerecorded) #IMPLIED
                   encryption  CDATA                         #IMPLIED>
<!ELEMENT code-time EMPTY>
<!ATTLIST code-time system CDATA #REQUIRED
                    start  CDATA #REQUIRED
                    stop   CDATA #IMPLIED>
<!ELEMENT code-num EMPTY>
<!ATTLIST code-num system CDATA #REQUIRED
                   num    CDATA #REQUIRED>
<!ELEMENT grabber-more EMPTY>
<!ATTLIST grabber-more grabber CDATA #REQUIRED
                       data    CDATA #REQUIRED>

<!-- programme: the content of a programme

As mentioned above, this element doesn't describe transmission details
like channel or time, but the content of what is broadcast.  The only
required element is 'title'.

The optional 'id' lets you later refer to this programme with
'programme-ref' elsewhere in the file.  Bear in mind that as with
channel ids, XML does not allow the id to begin with a number.  By
convention we begin programme ids with 'P'.

TODO should these ids be usable across files?

'newness' states whether the programme has been seen before.  The
legal values are:

- 'repeat' means it has been previously broadcast.  Different
broadcasters give slightly different meanings to 'repeat' - typically
it means the programme has been seen before on the same channel or
some other channel that is likely to be available to the viewer.  But
if a more exact meaning is known then the 'repeat-channel' and
'repeat-date' attributes can be used to give more details of the
previous showing.

- 'premiere' normally means the first showing on television in this
country, but some channels use it to mean 'the first showing of this
film on our channel in the current run'.  It might have been shown
before, but now they have paid for another set of showings, which
makes the first in that set count as a premiere!  This is normally
used only for movie.

- 'new-show' is stronger and means the first screened programme from a
new show that has never been shown on television before - if not
worldwide then at least never before in this country.  Subsequent
episodes or new seasons of an existing show do not count.

'last-chance="yes"' means 'the last screening of this programme we
have paid for', so it probably won't be shown again on that same
channel for a while.  This would normally be seen together with
'repeat', but it's possible that some impoverished networks can pay
for only one screening of a movie, so it would be both
newness="premiere" and last-chance="yes".

The attribute 'original-air-date' gives the date of the original
screening, in format CCYY-MM-DD, or if time is known as well as date,
the date and time in the usual format (and this is taken as the start
time of the original screening).  This is the original air date, not
the date of the previous screening.  However it's fuzzy whether it
refers to the earliest screening worldwide, or just in one country.

Similarly 'repeat-date' gives the date or datetime of the previous
screening.  'repeat-channel' gives the channel id for that screening.
These attributes are both optional, but neither may appear unless
newness="repeat".  (The DTD itself cannot enforce this.)

Sometimes listings sources say when a programme _will_ be repeated.
Where possible this information should be represented as normal
programme data - for example if you are told 'this programme will also
be shown at 17:00 on Tuesday', simply make another timeslot containing
the programme.  But sometimes you're given partial information, 'this
will be repeated on Tuesday' or just 'will be repeated'.  To represent
this the three 'will-repeat' attributes are analogues of the normal
repeat information.  'will-repeat' is a Boolean; if it is 'yes' then
'will-repeat-date' and 'will-repeat-channel' may be given (this
constraint is not enforced by the DTD).  'will-repeat-date' should be
a date in the future; it can also be a datetime but as mentioned
above, if you have exact information on the repeat showing it would be
better to write a separate timeslot and link the two showings by
programme id.

The next two attributes are for when a programme is chopped into
several parts - perhaps to sandwich a news bulletin or advertising in
the middle.  So the first part might be nth-part="1" num-parts="2",
and the second would be nth-part="2" num-parts="2".  This is not for
multipart episodes, where the programme's creator really intended the
content to be split into parts.  It is to represent timetables that
cut a whole programme arbitrarily into bits.  Normally the description
and other content of each part will be the same, since the content
describes the 'programme as a whole'.  But this is not enforced,
perhaps the listings source decides to give different information for
different parts (eg 'Conclusion').

The 'xml:lang' attribute in this element provides a convenient way to
set the default language for all free text appearing in the programme
description.  It's not the same as the 'language' subelement or other
means of giving the content of the language itself.  (For example a
Japanese film may have a description wholly in English.)
-->
<!ELEMENT programme (title+, desc*, remark*, credits?,
                     year?,
                     category*, language*,
                     length?,
                     icon*, link*, country*,
                     episode-details?,
                     (no-video | video?),
                     (no-audio | audio*),
                     subtitles*, deaf-signed?, audio-described?,
                     classification*, star-rating*)>
<!ATTLIST programme id                  ID         #IMPLIED
                    newness             (repeat | premiere | new-show)
                                                   #IMPLIED
                    last-chance         CDATA      #IMPLIED
                    original-air-date   CDATA      #IMPLIED
                    repeat-date         CDATA      #IMPLIED
                    repeat-channel      IDREF      #IMPLIED
                    will-repeat         (yes | no) #IMPLIED
                    will-repeat-date    CDATA      #IMPLIED
                    will-repeat-channel IDREF      #IMPLIED
                    nth-part            CDATA      #IMPLIED
                    num-parts           CDATA      #IMPLIED
                    xml:lang            CDATA      #IMPLIED>

<!-- Programme title, eg 'The Simpsons'.  This element is also reused
elsewhere for episode titles.

The flag 'original' can be useful for translated programmes where you
want to give the original and translated titles.
-->
<!ELEMENT title (#PCDATA)>
<!ATTLIST title xml:lang CDATA      #IMPLIED
                original (yes | no) #IMPLIED>

<!-- description of a programme

This corresponds to whatever free text a listings source has, arranged
as one or more paragraphs.  Following the convention of other repeated
elements, the more detailed or 'ordinary' description comes first if
there are several.

The optional 'type' attribute distinguishes between descriptions of
the show (that is to say, series) as a whole, descriptions of this
particular episode, and reviews or commentary (which normally refer to
both the show and this episode).  For one-off programmes like films,
which do not have separate episodes, 'show' should be used.
-->
<!ELEMENT desc (p+)>
<!ATTLIST desc xml:lang CDATA                     #IMPLIED
               type     (show | episode | review) #IMPLIED>

<!-- remark

Prose included in a TV guide entry for a programme, but which doesn't
directly relate to the content of that programme.  For example: 'If
you enjoyed this, you might also want to watch the interview with the
author at 18:00 tomorrow'.  This element is not intended for text that
refers to the programme itself, such as 'This is worth watching'; that
would go into 'desc'.
-->
<!ELEMENT remark (p+)>
<!ATTLIST desc xml:lang CDATA #IMPLIED>

<!-- Credits for the programme.

People are listed in decreasing order of importance; so for example
the starring actors appear first followed by the smaller parts.  The
credits list is not necessarily exhaustive - typically only the more
important credits will be part of the listings data.  Each person or
company credited can have an 'href' link to a biography, home page or
other information.

Where there is no exact match for the job you want, pick the closest:
for example 'presenter' can also be used for the host of a chat show.

When 'adapted-from' is present, the 'writer' credit takes the job of
'writer and adapter' (or 'writer and translator'), while the
'adapted-from' element's content gives the original work's name and
author.
-->
<!ELEMENT credits (director*, role*, writer*,
                   producer*, executive-producer*,
                   presenter*, commentator*, guest*, narrator*,
                   company*, adapted-from?)>
<!ELEMENT director (#PCDATA)>
<!ATTLIST director href CDATA #IMPLIED>
<!ELEMENT writer (#PCDATA)>
<!ATTLIST writer href CDATA #IMPLIED>
<!ELEMENT producer (#PCDATA)>
<!ATTLIST producer href CDATA #IMPLIED>
<!ELEMENT executive-producer (#PCDATA)>
<!ATTLIST executive-producer href CDATA #IMPLIED>
<!ELEMENT presenter (#PCDATA)>
<!ATTLIST presenter href CDATA #IMPLIED>
<!ELEMENT commentator (#PCDATA)>
<!ATTLIST commentator href CDATA #IMPLIED>
<!ELEMENT guest (#PCDATA)>
<!ATTLIST guest href CDATA #IMPLIED>
<!ELEMENT narrator (#PCDATA)>
<!ATTLIST narrator href CDATA #IMPLIED>

<!-- company - the production company -->
<!ELEMENT company (#PCDATA)>
<!ATTLIST company href CDATA #IMPLIED>

<!-- role - details of a role played by an actor

The name of the character is optional, if all you have is the actor's
name.  The 'guest' attribute is used to distinguish guest stars from
regular cast.
-->
<!ELEMENT role ((character, actor?) | actor)>
<!ELEMENT character (#PCDATA)>
<!ATTLIST character xml:lang CDATA #IMPLIED>
<!ELEMENT actor (#PCDATA)>
<!ATTLIST actor href  CDATA      #IMPLIED
                guest (yes | no) #IMPLIED>

<!-- adapted-from

The 'type' element gives the kind of work this programme was adapted
from, for example 'book'.
-->
<!ELEMENT adapted-from (type?, title, writer?)>
<!ELEMENT type (#PCDATA)>
<!ATTLIST type xml:lang CDATA #IMPLIED>

<!-- There are two kinds of year commonly given for movies: production
date and release date.  These are four digit years, not full
date-and-time.
-->
<!ELEMENT year EMPTY>
<!ATTLIST year production CDATA #IMPLIED
               release    CDATA #IMPLIED>

<!-- category - subject matter, or type of programme

It's hard to draw an exact line between categories like 'cartoon',
'news bulletin', 'film', which describe the type of programme, and
those like 'horror', 'comedy', 'soap' which describe the subject
matter.  So there is an attribute 'type' you can use but it is
optional.

Further, there are two kinds of category: human-readable names and
fixed codes set by standards bodies.  The first is represented by
element content, the second by the 'system' and 'code' attributes.

But a standards body might define a human-readable synonym for its
codes, for example A412 might have the synonym 'drama'.  To help
readers who don't understand the category codes, you might want to
store the synonym as element content as well as storing the code.
That's why you can create a category with both the 'code' attribute
and element content (which might have an 'xml:lang' attribute too).

Beyond what the grammar specifies, additional constraints on this
element are that if 'system' is given, 'code' must also be given; and
if 'xml:lang' is given, there must be some element content.
-->
<!ELEMENT category (#PCDATA)>
<!ATTLIST category type     (genre | programme-type) #IMPLIED
                   system   CDATA                    #IMPLIED
                   code     CDATA                    #IMPLIED
                   xml:lang CDATA                    #IMPLIED>

<!-- Specify a language.  This can be by naming it (and the name of a
language itself is in a particular language, specified with the 'xml:lang'
attribute) or by using a language code such as 'en'.  Or, the language
can be unknown - sometimes it is useful to explicitly state this.

The 'original' attribute says whether this language is the original
one for the programme - as opposed to being a dubbed audio stream or
translated subtitles or whatever.

Now it is possible to specify language in many places.  It can belong
to the programme element itself or to an audio element.  Normally, you
will put language for the programme as a whole, or separate languages
for different audio streams, but not both.
-->
<!ELEMENT language (language-name | language-code | unknown)>
<!ATTLIST language original (yes | no) #IMPLIED>
<!ELEMENT language-name (#PCDATA)>
<!ATTLIST language-name xml:lang CDATA #IMPLIED>
<!ELEMENT language-code EMPTY>
<!ATTLIST language-code code CDATA #REQUIRED>
<!ELEMENT unknown EMPTY>

<!-- The true length of the programme, after taking out any
advertising or trailers that may bloat the schedules.  Note, this is
the length of what is broadcast, for example it is not the 'original
length' of some film that was cut down for television.
-->
<!ELEMENT length EMPTY>
<!ATTLIST length seconds CDATA #REQUIRED>

<!-- A country where the programme was made or one of the countries in
a joint production.  You can give the name of a country, in which case
you might want to specify the language in which this name is written,
or you can give a two-letter uppercase country code, in which case the
lang attribute should not be given.  For example,

<country xml:lang="en">Italy</country>
<country>GB</country>
-->
<!ELEMENT country (#PCDATA)>
<!ATTLIST country xml:lang CDATA #IMPLIED>

<!-- Details of which episode this is.  You can state which season or
series and which episode within a season.  For both of these the 'nth'
attribute counts from 1 and 'of' optionally states how many seasons
there are in total, or how many episodes within this season.  For
example,

<episode-details>
  <season nth="1" />
  <episode nth="2" of="10" in="season"/>
</episode-details>

But as well as numbering the episode, you can give an episode title,
such as

<episode nth="1" in="season">
  <title>Welcome to Royston Vasey</title>
</episode>

This replaces the 'sub-title' element that older XMLTV formats used.
You can also title the whole season, if this should be needed.

The 'in' attribute for episodes says whether the episode number given
is relative to this season ('first episode of the second season') or
the show as a whole ('29th episode of all episodes').  Some listings
sources give one, some give the other.

If you know that this is the last episode, but not how many episodes
there are in total, then give the special value nth="last", e.g.:

<episode nth="last" in="season" />

The episode-details element can contain an 'official-episode-num'
which is the string the programme's producers use to identify it, eg
'7G04' for Simpsons Episode #7G04.

Multi-part episodes can be handled in two ways depending on the
listings source.  Some sources consider them as two separate episodes
with '... Part One' and '... Part Two' in the title, for example 'Who
Short Mr Burns' has separate episode numbers 2F16 and 2F20 for the two
halves.  In this case the episode number and episode title would be
different between the two halves and the 'episode-part' element would
not be used.

On the other hand, some listings sources do use the same episode title
for both halves and some separate information about 'part 1 of 2'.
For these sources use 'episode-part' - an episode can be divided into
episode-parts in just the same way a season can be divided into
episodes.

If it's a simple case of a long programme being split into bits, use
the 'nth-part' attribute of 'programme'.
-->
<!ELEMENT episode-details (season?, episode?, episode-part?,
                           official-episode-num?)>
<!ELEMENT season (title*)>
<!ATTLIST season nth CDATA #IMPLIED
                 of  CDATA #IMPLIED>
<!ELEMENT episode (title*)>
<!ATTLIST episode nth CDATA           #IMPLIED
                  of  CDATA           #IMPLIED
                  in  (season | show) "season">
<!ELEMENT episode-part (title*)>
<!ATTLIST episode-part nth CDATA #IMPLIED
                       of  CDATA #IMPLIED>
<!ELEMENT official-episode-num (#PCDATA)>

<!-- Details of the video stream.  The element 'black-and-white' is
either present or not.  'aspect' gives the aspect ratio of the screen
(for example 16:9 means x="16" and y="9"), while 'quality' is some
arbitrary string such as 'HDTV'.
-->
<!ELEMENT video (black-and-white?, aspect?, quality?)>
<!ELEMENT black-and-white EMPTY>
<!-- TODO b&w, colorized, both, colour -->
<!ELEMENT aspect EMPTY>
<!ATTLIST aspect x CDATA #REQUIRED
                 y CDATA #REQUIRED>
<!ELEMENT quality (#PCDATA)>

<!-- If there is no picture (for example a radio broadcast), this
element makes that explicit.
-->
<!ELEMENT no-video EMPTY>

<!-- Details of an audio stream.  This includes the technical
information about polyphony, but also what language(s) the audio is
in.  So a programme may have multiple audio streams in different
languages.

There are three main kinds of polyphony, mono stereo and surround,
each represented by a single element.  Then for more subtle
differences to do with what encoding is used to send the polyphonic
audio, the 'stereo' and 'surround' elements have a 'system' attribute.
This is application-defined but by convention should be a lowercase
version of the system's name with hyphen for spaces, for example
'dolby-surround' or 'ac3'.

The 'channel' attribute is an implementation-specific way to identify
the particular audio channel within the broadcast.  In the case of
dual-audio they might be called A and B or left and right.  (If you
know what the standard terminology is, let me know.)

'extra-for-blind' is a Boolean value that says whether this audio
stream is for spoken descriptions of things happening on screen, and
intended for use in addition to the normal audio track.
-->
<!ELEMENT audio (language*, (mono | stereo | surround)?)>
<!ATTLIST audio channel         CDATA      #IMPLIED
                extra-for-blind (yes | no) #IMPLIED>
<!ELEMENT mono EMPTY>
<!ELEMENT stereo EMPTY>
<!ATTLIST stereo system CDATA #IMPLIED>
<!ELEMENT surround EMPTY>
<!ATTLIST surround system CDATA #IMPLIED>

<!-- Element to explicitly indicate 'no sound'. -->
<!ELEMENT no-audio EMPTY>

<!-- Subtitles.  These can be 'onscreen' (superimposed on the picture
and impossible to get rid of), or they can be the kind that is sent
digitally and optionally displayed by the receiver (closed
captioning).  That in turn can be 'teletext' (digital signal sent
alongside a probably-analogue picture) or 'dvb' (sent as part of a wholly
digital signal).  So your ability to see the subtitles may depend on
whether you are receiving the analogue or digital transmission.  A
particular subtitles stream may be available with one or more of the
above methods.  The 'teletext' element has an optional page number.

(From a purist point of view you could say there should be two
separate channels with separate timeslots and programmes for the
digital and analogue versions, but that seems like overkill just for
this.)

Also a set of subtitles may be in one or more languages (an opera may
have subtitles in Italian for the singing and English for the
introduction).  If subtitles are available in a _choice_ of languages,
there should be multiple 'subtitles' elements.

For example, one set of subtitles, in English and available by DVB and
teletext, would be represented as:

<subtitles>
  <language xml:lang="en">English</language>
  <dvb />
  <teletext page="888" />
</subtitles>
-->
<!ELEMENT subtitles (language*, ((dvb, teletext?, superimposed?)
                                |     (teletext,  superimposed?)
                                |                 superimposed))>
<!ELEMENT dvb EMPTY>
<!ELEMENT teletext EMPTY>
<!ATTLIST teletext page CDATA #IMPLIED>
<!ELEMENT superimposed EMPTY>

<!-- Signed for the deaf.  The meaning of this element is that the
signing is superimposed on the picture.  'language' will probably
indicate some sign language.
-->
<!ELEMENT deaf-signed (language*)>

<!-- Soundtrack includes extra description of events for those who
can't see the picture.  The language is the same as the programme's
main language.
-->
<!ELEMENT audio-described EMPTY>

<!-- Classification such as movie ratings.  This is where a third
party rates the content as suitable for a particular audience.
'system' will normally be the name of the body which awards a
particular classification.  For example:

    <classification system="MPAA">
      <text>PG-13</text>
    </classification>
-->
<!ELEMENT classification (text, icon?)>
<!ATTLIST classification system CDATA #IMPLIED>

<!-- 'Star rating' - many listings guides award a programme a score as
a quick guide to how good it is.  The number of 'stars' should be from
zero to 'out-of', inclusive.

You should try to map whatever wacky system your listings
source uses to a number of stars: so for example if they have thumbs
up, thumbs sideways and thumbs down, you could map that to two, one or
zero stars out of two.

Some listings sources have different kinds of star rating, they may
rate a show separately for 'action', 'humour', 'suspense' and so on.
This can be represented by a 'for' element, an unusual case of the
data being in an attribute and metadata being free text.  If there is
no 'for' then this means just a plain vanilla star-rating, which
should be the common case.
-->
<!ELEMENT star-rating (for?, icon?)>
<!ATTLIST star-rating stars  CDATA #REQUIRED
                      out-of CDATA #REQUIRED>
<!ELEMENT for (#PCDATA)>
<!ATTLIST for xml:lang CDATA #IMPLIED>

<!-- programme-ref

Where exactly the same programme appears in two timeslots, it is
allowed for the later occurrences to refer back to the first by its
'id' attribute.  Semantically, a programme-ref is the same as copying
and pasting the programme referred to - except for the attributes of
'programme'.

It is required that the programme pointed to occurs earlier in the
file.

Applications might use programme ids and refs to provide a quick 'find
other occurrences of this programme in the schedule' function, but
they should not assume that two 'programme' elements necessarily refer
to different programmes.

The 'newness' and 'original-air-date' attributes of programme may
conflict a little with referring to that programme later - obviously
if the same programme is on at two times at least one of them must be
a repeat.  You could decide that such attributes apply only to the
earliest occurrence of the programme; but for some applications it may
make more sense to notice them for all occurrences (if a programme is
'new' then you might prompt the user about it for all showings during
the first week).

The 'nth-part' and 'num-parts' attributes have the same meaning as in
the 'programme' element.  So it's possible to represent different
parts of the same programme using refs.

The 'id' and 'xml:lang' attributes of 'programme' are considered to
apply equally to the ref.  It would not be legal to have two
'programme' elements with the same id, but of course it is allowed to
refer back to a programme with a given id.
-->
<!ELEMENT programme-ref EMPTY>
<!ATTLIST programme-ref programme IDREF #REQUIRED
                        nth-part  CDATA #IMPLIED
                        num-parts CDATA #IMPLIED>

<!-- Note: Unknown versus nothing

Most of this file format follows the principle that what is not known
is not stated.  For example a cast list gives actors who featured in a
programme, but if an actor is not in the list that does not mean he
didn't star.  It means it's not known whether he starred or not.

But for timeslots there is an explicit 'unknown' element which can be
used instead of 'programme' to indicate that you don't know what will
be shown on this channel during this time period.  On the other hand,
just omitting a timeslot and so leaving gaps means there is nothing on
or at least nothing of interest.  (Consider a filter program which
selects all programmes which are interesting in some way.  The output
from this filter will have gaps between timeslots when there is
nothing interesting on.)

However it's clear that any listings feed will only know about a
certain time period.  A file giving listings for one week doesn't mean
that there will be nothing on after that week, it just means that no
information is provided about later dates.  So we have the 'from' and
'until' attributes of the 'tv' element to say what time period this
file covers.  Times outside that period are implicitly unknown.  But
within that period, you leave gaps to mean 'nothing is on' and must
use explicit 'unknown' elements where information is missing.

It is permitted for timeslots to stray outside the from/until period;
this is 'bonus information' which might have been collected by
accident while fetching listings, and it is a shame to throw it away.
Gaps in this bonus information are considered 'unknown'.

If 'from' or 'until' are missing, we assume that the beginning of the
first timeslot or the end of the last timeslot define the edge of the
period for which information is available.  But when generating files
you should try to fill in these two attributes if possible.
-->

<!-- Note: terminology

A 'show' is what many people might call a series, for example 'The
Simpsons'.  If you wanted to find every Simpsons episode during a
week, you would be looking for occurrences of that show.  Typically
every programme belonging to a show has the same title, although it's
just possible for the same show to be listed with different titles
at different times ('The Phil Silvers Show' and just 'Phil Silvers'
are usually the same show).

A 'season' is a bunch of episodes of a show, usually made at about the
same time and aired consecutively.  Some people might call that a
series too, but you can see that the word is ambiguous, so we try to
always use the terms show and season.
-->
